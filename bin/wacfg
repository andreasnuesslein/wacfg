#!/usr/bin/env python

import sys

from wacfg.config import Config
from wacfg.helpers import *
from wacfg.vercmp import *
from wacfg.output import OUT
from wacfg.content import Content
from wacfg.webapp import *

class Env:
    pass


def main():
    from wacfg import optparsing
    from optparse import OptionParser, OptionGroup

    parser = optparsing.waopts()

    (Env.options, Env.args) = parser.parse_args()
    Env.cfg = Config()

    # end optparser ---------------------------------------------------

    OUT.debug("Eng.options: %s" % Env.options)
    OUT.debug("Env.args: %s" % Env.args)

    if Env.args[0] in ["install","upgrade","remove","purge"]:
        if len(Env.args) == 1:
            OUT.error("You need to provide a webapp. Get a list with 'wacfg list'")
            sys.exit(1)

        argx = [x for x in sys.argv[1:] if x != Env.args[1]]
        if len(Env.args) == 2:
            ApplicationList(Env.args[1]).latest_version().install(argx)
        elif len(Env.args) == 3:
            Application(Env.args[1], Env.args[2]).install(argx)


    if "list" in Env.args:
        if "installed" in Env.args:
            InstalledApps().list()
        elif "available" in Env.args:
            ApplicationList().list()
        else:
            ApplicationList().list()
            print("\n")
            InstalledApps().list()

    if "upgradeall" in Env.args:
        InstalledApps().upgrade()

if __name__ == "__main__":
    sys.exit(main())

